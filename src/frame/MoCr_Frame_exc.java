/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frame;
import core.*;

/**
 *
 * @author simon
 */
public class MoCr_Frame_exc extends javax.swing.JFrame {
    
    private ExcLogic excLogic;
    /**
     * Creates new form MoCr_Frame_exc
     */
    public MoCr_Frame_exc() {
        initComponents();
        excLogic = new ExcLogic();
        this.setVisible(false);
        NaechsteAufgabe();
    }
    
    public void refresh(int n) {
        this.PanelSetzen(n);
        this.setVisible(true);        
    }
    
    public void PanelSetzen(int n)
    {
        MoCr_exc_Main.removeAll();
        
        switch(n)
        {
            case 0:
                MoCr_exc_Main.add(MoCr_exc_Caesar);
                break;
            case 1:
                MoCr_exc_Main.add(MoCr_exc_Multiplikativ);
                break;
            case 2:
                MoCr_exc_Main.add(MoCr_exc_Vigenere);
                break;
            case 3:
                MoCr_exc_Main.add(MoCr_exc_Enigma);
                break;
            case 4:
                MoCr_exc_Main.add(MoCr_exc_OneTimePad);
                break;
            case 5:
                MoCr_exc_Main.add(MoCr_exc_Transposition);
                break;
            case 6:
                MoCr_exc_Main.add(MoCr_exc_Codierungen);
                break;
            case 7:
                MoCr_exc_Main.add(MoCr_exc_Spielsprachen);
                break;
            case 8:
                MoCr_exc_Main.add(MoCr_exc_Hill);
                break;
            case 9:
                MoCr_exc_Main.add(MoCr_exc_Steganographie);
                 break;
            case 10:
                MoCr_exc_Main.add(MoCr_exc_Affine);
                break;
            case 11:
                MoCr_exc_Main.add(MoCr_exc_Kryptoanalyse);
                break;
            default:
                MoCr_exc_Main.add(MoCr_exc_Fehlerpanel);
                break;
        }
        MoCr_exc_Main.repaint();
        MoCr_exc_Main.revalidate();
                
    }
    
    void NaechsteAufgabe()
    {
        excLogic.AufgabeWeiterschalten();
        if((excLogic.aufgabentypGeben()) == 1 || (excLogic.aufgabentypGeben() == 2))
            MoCr_exc_Caesar_aufgabentext.setText(excLogic.anweisungstextGeben());
        
            if(excLogic.aufgabenNummerGeben() != 0)
            {
                MoCr_exc_Caesar_aufgabentext.append("\n" + "\n" + "Schlüssel:  " + excLogic.schlüsselGeben());
            }
            //MoCr_exc_Caesar_Schlüsseleingabe.setText(excLogic.schlüsselGeben());
            if(excLogic.aufgabentypGeben() == 1)
            {
                MoCr_exc_Caesar_anweisung.setText("Verschlüssele folgenden Text");
            }
            else if(excLogic.aufgabentypGeben() == 2)
            {
                MoCr_exc_Caesar_anweisung.setText("Entschlüssele folgenden Text");
            }
        else if(excLogic.aufgabentypGeben() == 3)
        {
            MoCr_exc_Caesar_anweisung.setText("Finde den Schlüssel");
            MoCr_exc_Caesar_aufgabentext.setText("Text: " + excLogic.anweisungstextGeben());
            MoCr_exc_Caesar_aufgabentext.append("\n" + "\n" + "Verschlüsselter Text:  " + excLogic.caesarEncrypt(excLogic.anweisungstextGeben(), excLogic.schlüsselGeben()));
        }
        else
        {
            MoCr_exc_Caesar_anweisung.setText("");
            MoCr_exc_Caesar_aufgabentext.setText("");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MoCr_exc_Main = new javax.swing.JPanel();
        MoCr_exc_Caesar = new javax.swing.JPanel();
        MoCr_exc_Caesar_Aufgabe = new javax.swing.JPanel();
        MoCr_Caesar_AufgabeLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        MoCr_exc_Caesar_aufgabentext = new javax.swing.JTextArea();
        MoCr_exc_Caesar_anweisung = new javax.swing.JTextField();
        MoCr_exc_Caesar_Eingabe = new javax.swing.JPanel();
        MoCr_exc_Caesar_EingabeLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        MoCr_exc_Caesar_eingabefeld = new javax.swing.JTextArea();
        MoCr_exc_Caesar_Prüfenknopf = new javax.swing.JButton();
        MoCr_exc_Caesar_RichtigFalschAusgabe = new javax.swing.JTextField();
        MoCr_exc_Caesar_Loesung = new javax.swing.JPanel();
        MoCr_exc_Caesar_LösungButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        MoCr_exc_Caesar_Lösungsanzeige = new javax.swing.JTextArea();
        MoCr_exc_Caesar_überschrift = new javax.swing.JPanel();
        MoCr_exc_Caesar_überschriftfenster = new javax.swing.JLabel();
        MoCr_exc_Caesar_Weiterschaltknopf = new javax.swing.JButton();
        MoCr_exc_Vigenere = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        MoCr_exc_Multiplikativ = new javax.swing.JPanel();
        MoCr_exc_Multiplikativ_überschrift = new javax.swing.JPanel();
        MoCr_exc_Multiplikativ_überschriftfenster = new javax.swing.JLabel();
        MoCr_exc_Multiplikativ_Aufgabe = new javax.swing.JPanel();
        MoCr_exc_Multiplikativ_AufgabeLabel = new javax.swing.JLabel();
        MoCr_exc_Multiplikativ_Weiterschaltknopf = new javax.swing.JButton();
        MoCr_exc_Multiplikativ_Aufgabe_changeable = new javax.swing.JPanel();
        MoCr_exc_Multiplikativ_aufgabe1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        MoCr_exc_Multiplikativ_aufgabe2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        MoCr_exc_Multiplikativ_Eingabe = new javax.swing.JPanel();
        MoCr_exc_Multiplikativ_EingabeLabel = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        MoCr_exc_Multiplikativ_eingabefeld = new javax.swing.JTextArea();
        MoCr_exc_Multiplikativ_Prüfenknopf = new javax.swing.JButton();
        MoCr_exc_Multiplikativ_RichtigFalschAusgabe = new javax.swing.JTextField();
        MoCr_exc_Multiplikativ_LösungButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        MoCr_exc_Multiplikativ_Lösungsanzeige = new javax.swing.JTextArea();
        MoCr_exc_Enigma = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        MoCr_exc_OneTimePad = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        MoCr_exc_Transposition = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        MoCr_exc_Codierungen = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        MoCr_exc_Spielsprachen = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        MoCr_exc_Hill = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        MoCr_exc_Steganographie = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        MoCr_exc_Affine = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        MoCr_exc_Kryptoanalyse = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        MoCr_exc_Fehlerpanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        MoCr_exc_Main.setLayout(new java.awt.CardLayout());

        MoCr_Caesar_AufgabeLabel.setFont(new java.awt.Font("Constantia", 0, 24)); // NOI18N
        MoCr_Caesar_AufgabeLabel.setText("Aufgabe:");

        MoCr_exc_Caesar_aufgabentext.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        MoCr_exc_Caesar_aufgabentext.setColumns(20);
        MoCr_exc_Caesar_aufgabentext.setFont(new java.awt.Font("Constantia", 0, 17)); // NOI18N
        MoCr_exc_Caesar_aufgabentext.setRows(5);
        MoCr_exc_Caesar_aufgabentext.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        MoCr_exc_Caesar_aufgabentext.setEnabled(false);
        jScrollPane4.setViewportView(MoCr_exc_Caesar_aufgabentext);

        MoCr_exc_Caesar_anweisung.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        MoCr_exc_Caesar_anweisung.setFont(new java.awt.Font("Constantia", 0, 17)); // NOI18N
        MoCr_exc_Caesar_anweisung.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        MoCr_exc_Caesar_anweisung.setEnabled(false);
        MoCr_exc_Caesar_anweisung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_exc_Caesar_anweisungActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MoCr_exc_Caesar_AufgabeLayout = new javax.swing.GroupLayout(MoCr_exc_Caesar_Aufgabe);
        MoCr_exc_Caesar_Aufgabe.setLayout(MoCr_exc_Caesar_AufgabeLayout);
        MoCr_exc_Caesar_AufgabeLayout.setHorizontalGroup(
            MoCr_exc_Caesar_AufgabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Caesar_AufgabeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MoCr_Caesar_AufgabeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(MoCr_exc_Caesar_AufgabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MoCr_exc_Caesar_AufgabeLayout.createSequentialGroup()
                        .addComponent(MoCr_exc_Caesar_anweisung, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 133, Short.MAX_VALUE))
                    .addComponent(jScrollPane4)))
        );
        MoCr_exc_Caesar_AufgabeLayout.setVerticalGroup(
            MoCr_exc_Caesar_AufgabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Caesar_AufgabeLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(MoCr_exc_Caesar_AufgabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MoCr_exc_Caesar_AufgabeLayout.createSequentialGroup()
                        .addComponent(MoCr_Caesar_AufgabeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(MoCr_exc_Caesar_AufgabeLayout.createSequentialGroup()
                        .addComponent(MoCr_exc_Caesar_anweisung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))))
        );

        MoCr_exc_Caesar_EingabeLabel.setFont(new java.awt.Font("Constantia", 0, 24)); // NOI18N
        MoCr_exc_Caesar_EingabeLabel.setText("Eingabe:");

        MoCr_exc_Caesar_eingabefeld.setColumns(20);
        MoCr_exc_Caesar_eingabefeld.setFont(new java.awt.Font("Constantia", 0, 13)); // NOI18N
        MoCr_exc_Caesar_eingabefeld.setLineWrap(true);
        MoCr_exc_Caesar_eingabefeld.setRows(5);
        MoCr_exc_Caesar_eingabefeld.setWrapStyleWord(true);
        jScrollPane2.setViewportView(MoCr_exc_Caesar_eingabefeld);

        MoCr_exc_Caesar_Prüfenknopf.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        MoCr_exc_Caesar_Prüfenknopf.setText("Eingabe prüfen");
        MoCr_exc_Caesar_Prüfenknopf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_exc_Caesar_PrüfenknopfActionPerformed(evt);
            }
        });

        MoCr_exc_Caesar_RichtigFalschAusgabe.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        MoCr_exc_Caesar_RichtigFalschAusgabe.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        MoCr_exc_Caesar_RichtigFalschAusgabe.setEnabled(false);
        MoCr_exc_Caesar_RichtigFalschAusgabe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_exc_Caesar_RichtigFalschAusgabeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MoCr_exc_Caesar_EingabeLayout = new javax.swing.GroupLayout(MoCr_exc_Caesar_Eingabe);
        MoCr_exc_Caesar_Eingabe.setLayout(MoCr_exc_Caesar_EingabeLayout);
        MoCr_exc_Caesar_EingabeLayout.setHorizontalGroup(
            MoCr_exc_Caesar_EingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_exc_Caesar_EingabeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MoCr_exc_Caesar_EingabeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MoCr_exc_Caesar_EingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MoCr_exc_Caesar_EingabeLayout.createSequentialGroup()
                        .addComponent(MoCr_exc_Caesar_Prüfenknopf, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MoCr_exc_Caesar_RichtigFalschAusgabe, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        MoCr_exc_Caesar_EingabeLayout.setVerticalGroup(
            MoCr_exc_Caesar_EingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Caesar_EingabeLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(MoCr_exc_Caesar_EingabeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(MoCr_exc_Caesar_EingabeLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MoCr_exc_Caesar_EingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MoCr_exc_Caesar_Prüfenknopf, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_exc_Caesar_RichtigFalschAusgabe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        MoCr_exc_Caesar_LösungButton.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        MoCr_exc_Caesar_LösungButton.setText("Lösung anzeigen");
        MoCr_exc_Caesar_LösungButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_exc_Caesar_LösungButtonActionPerformed(evt);
            }
        });

        MoCr_exc_Caesar_Lösungsanzeige.setEditable(false);
        MoCr_exc_Caesar_Lösungsanzeige.setColumns(20);
        MoCr_exc_Caesar_Lösungsanzeige.setFont(new java.awt.Font("Constantia", 0, 13)); // NOI18N
        MoCr_exc_Caesar_Lösungsanzeige.setLineWrap(true);
        MoCr_exc_Caesar_Lösungsanzeige.setRows(5);
        MoCr_exc_Caesar_Lösungsanzeige.setWrapStyleWord(true);
        jScrollPane1.setViewportView(MoCr_exc_Caesar_Lösungsanzeige);

        javax.swing.GroupLayout MoCr_exc_Caesar_LoesungLayout = new javax.swing.GroupLayout(MoCr_exc_Caesar_Loesung);
        MoCr_exc_Caesar_Loesung.setLayout(MoCr_exc_Caesar_LoesungLayout);
        MoCr_exc_Caesar_LoesungLayout.setHorizontalGroup(
            MoCr_exc_Caesar_LoesungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Caesar_LoesungLayout.createSequentialGroup()
                .addComponent(MoCr_exc_Caesar_LösungButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1))
        );
        MoCr_exc_Caesar_LoesungLayout.setVerticalGroup(
            MoCr_exc_Caesar_LoesungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Caesar_LoesungLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MoCr_exc_Caesar_LoesungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addGroup(MoCr_exc_Caesar_LoesungLayout.createSequentialGroup()
                        .addComponent(MoCr_exc_Caesar_LösungButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        MoCr_exc_Caesar_überschriftfenster.setFont(new java.awt.Font("Constantia", 1, 24)); // NOI18N
        MoCr_exc_Caesar_überschriftfenster.setText("Übungsaufgaben zu Caesar:");

        javax.swing.GroupLayout MoCr_exc_Caesar_überschriftLayout = new javax.swing.GroupLayout(MoCr_exc_Caesar_überschrift);
        MoCr_exc_Caesar_überschrift.setLayout(MoCr_exc_Caesar_überschriftLayout);
        MoCr_exc_Caesar_überschriftLayout.setHorizontalGroup(
            MoCr_exc_Caesar_überschriftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Caesar_überschriftLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(MoCr_exc_Caesar_überschriftfenster, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MoCr_exc_Caesar_überschriftLayout.setVerticalGroup(
            MoCr_exc_Caesar_überschriftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Caesar_überschriftLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MoCr_exc_Caesar_überschriftfenster, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );

        MoCr_exc_Caesar_Weiterschaltknopf.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        MoCr_exc_Caesar_Weiterschaltknopf.setText("Nächste Aufgabe");
        MoCr_exc_Caesar_Weiterschaltknopf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_exc_Caesar_WeiterschaltknopfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MoCr_exc_CaesarLayout = new javax.swing.GroupLayout(MoCr_exc_Caesar);
        MoCr_exc_Caesar.setLayout(MoCr_exc_CaesarLayout);
        MoCr_exc_CaesarLayout.setHorizontalGroup(
            MoCr_exc_CaesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_CaesarLayout.createSequentialGroup()
                .addComponent(MoCr_exc_Caesar_Aufgabe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_exc_Caesar_Weiterschaltknopf)
                .addContainerGap())
            .addComponent(MoCr_exc_Caesar_Eingabe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MoCr_exc_Caesar_Loesung, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MoCr_exc_Caesar_überschrift, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MoCr_exc_CaesarLayout.setVerticalGroup(
            MoCr_exc_CaesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_CaesarLayout.createSequentialGroup()
                .addComponent(MoCr_exc_Caesar_überschrift, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MoCr_exc_CaesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(MoCr_exc_Caesar_Aufgabe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoCr_exc_Caesar_Weiterschaltknopf, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_exc_Caesar_Eingabe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_exc_Caesar_Loesung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        MoCr_exc_Main.add(MoCr_exc_Caesar, "card2");

        jLabel3.setText("Vigenere");

        javax.swing.GroupLayout MoCr_exc_VigenereLayout = new javax.swing.GroupLayout(MoCr_exc_Vigenere);
        MoCr_exc_Vigenere.setLayout(MoCr_exc_VigenereLayout);
        MoCr_exc_VigenereLayout.setHorizontalGroup(
            MoCr_exc_VigenereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_VigenereLayout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(373, Short.MAX_VALUE))
        );
        MoCr_exc_VigenereLayout.setVerticalGroup(
            MoCr_exc_VigenereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_VigenereLayout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(386, Short.MAX_VALUE))
        );

        MoCr_exc_Main.add(MoCr_exc_Vigenere, "card3");

        MoCr_exc_Multiplikativ_überschriftfenster.setFont(new java.awt.Font("Constantia", 1, 24)); // NOI18N
        MoCr_exc_Multiplikativ_überschriftfenster.setText("Übungsaufgaben zur Multiplikativen Chiffre");

        javax.swing.GroupLayout MoCr_exc_Multiplikativ_überschriftLayout = new javax.swing.GroupLayout(MoCr_exc_Multiplikativ_überschrift);
        MoCr_exc_Multiplikativ_überschrift.setLayout(MoCr_exc_Multiplikativ_überschriftLayout);
        MoCr_exc_Multiplikativ_überschriftLayout.setHorizontalGroup(
            MoCr_exc_Multiplikativ_überschriftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_exc_Multiplikativ_überschriftLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MoCr_exc_Multiplikativ_überschriftfenster, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );
        MoCr_exc_Multiplikativ_überschriftLayout.setVerticalGroup(
            MoCr_exc_Multiplikativ_überschriftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Multiplikativ_überschriftLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MoCr_exc_Multiplikativ_überschriftfenster, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MoCr_exc_Multiplikativ_AufgabeLabel.setFont(new java.awt.Font("Constantia", 0, 24)); // NOI18N
        MoCr_exc_Multiplikativ_AufgabeLabel.setText("Aufgabe:");

        MoCr_exc_Multiplikativ_Weiterschaltknopf.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        MoCr_exc_Multiplikativ_Weiterschaltknopf.setText("Nächste Aufgabe");
        MoCr_exc_Multiplikativ_Weiterschaltknopf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_exc_Multiplikativ_WeiterschaltknopfActionPerformed(evt);
            }
        });

        MoCr_exc_Multiplikativ_Aufgabe_changeable.setLayout(new java.awt.CardLayout());

        jLabel2.setText("Aufgabe 1");

        javax.swing.GroupLayout MoCr_exc_Multiplikativ_aufgabe1Layout = new javax.swing.GroupLayout(MoCr_exc_Multiplikativ_aufgabe1);
        MoCr_exc_Multiplikativ_aufgabe1.setLayout(MoCr_exc_Multiplikativ_aufgabe1Layout);
        MoCr_exc_Multiplikativ_aufgabe1Layout.setHorizontalGroup(
            MoCr_exc_Multiplikativ_aufgabe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Multiplikativ_aufgabe1Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(227, Short.MAX_VALUE))
        );
        MoCr_exc_Multiplikativ_aufgabe1Layout.setVerticalGroup(
            MoCr_exc_Multiplikativ_aufgabe1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Multiplikativ_aufgabe1Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        MoCr_exc_Multiplikativ_Aufgabe_changeable.add(MoCr_exc_Multiplikativ_aufgabe1, "card2");

        jLabel4.setText("Aufgabe 2");

        javax.swing.GroupLayout MoCr_exc_Multiplikativ_aufgabe2Layout = new javax.swing.GroupLayout(MoCr_exc_Multiplikativ_aufgabe2);
        MoCr_exc_Multiplikativ_aufgabe2.setLayout(MoCr_exc_Multiplikativ_aufgabe2Layout);
        MoCr_exc_Multiplikativ_aufgabe2Layout.setHorizontalGroup(
            MoCr_exc_Multiplikativ_aufgabe2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Multiplikativ_aufgabe2Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(182, Short.MAX_VALUE))
        );
        MoCr_exc_Multiplikativ_aufgabe2Layout.setVerticalGroup(
            MoCr_exc_Multiplikativ_aufgabe2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Multiplikativ_aufgabe2Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        MoCr_exc_Multiplikativ_Aufgabe_changeable.add(MoCr_exc_Multiplikativ_aufgabe2, "card3");

        javax.swing.GroupLayout MoCr_exc_Multiplikativ_AufgabeLayout = new javax.swing.GroupLayout(MoCr_exc_Multiplikativ_Aufgabe);
        MoCr_exc_Multiplikativ_Aufgabe.setLayout(MoCr_exc_Multiplikativ_AufgabeLayout);
        MoCr_exc_Multiplikativ_AufgabeLayout.setHorizontalGroup(
            MoCr_exc_Multiplikativ_AufgabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Multiplikativ_AufgabeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MoCr_exc_Multiplikativ_AufgabeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_exc_Multiplikativ_Aufgabe_changeable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MoCr_exc_Multiplikativ_Weiterschaltknopf, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        MoCr_exc_Multiplikativ_AufgabeLayout.setVerticalGroup(
            MoCr_exc_Multiplikativ_AufgabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Multiplikativ_AufgabeLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(MoCr_exc_Multiplikativ_AufgabeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MoCr_exc_Multiplikativ_Weiterschaltknopf, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(MoCr_exc_Multiplikativ_Aufgabe_changeable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MoCr_exc_Multiplikativ_EingabeLabel.setFont(new java.awt.Font("Constantia", 0, 24)); // NOI18N
        MoCr_exc_Multiplikativ_EingabeLabel.setText("Eingabe:");

        MoCr_exc_Multiplikativ_eingabefeld.setColumns(20);
        MoCr_exc_Multiplikativ_eingabefeld.setFont(new java.awt.Font("Constantia", 0, 13)); // NOI18N
        MoCr_exc_Multiplikativ_eingabefeld.setRows(5);
        jScrollPane6.setViewportView(MoCr_exc_Multiplikativ_eingabefeld);

        MoCr_exc_Multiplikativ_Prüfenknopf.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        MoCr_exc_Multiplikativ_Prüfenknopf.setText("Eingabe prüfen");

        MoCr_exc_Multiplikativ_RichtigFalschAusgabe.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        MoCr_exc_Multiplikativ_RichtigFalschAusgabe.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        MoCr_exc_Multiplikativ_RichtigFalschAusgabe.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        MoCr_exc_Multiplikativ_RichtigFalschAusgabe.setEnabled(false);
        MoCr_exc_Multiplikativ_RichtigFalschAusgabe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_exc_Multiplikativ_RichtigFalschAusgabeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MoCr_exc_Multiplikativ_EingabeLayout = new javax.swing.GroupLayout(MoCr_exc_Multiplikativ_Eingabe);
        MoCr_exc_Multiplikativ_Eingabe.setLayout(MoCr_exc_Multiplikativ_EingabeLayout);
        MoCr_exc_Multiplikativ_EingabeLayout.setHorizontalGroup(
            MoCr_exc_Multiplikativ_EingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_exc_Multiplikativ_EingabeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MoCr_exc_Multiplikativ_EingabeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MoCr_exc_Multiplikativ_EingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MoCr_exc_Multiplikativ_EingabeLayout.createSequentialGroup()
                        .addComponent(MoCr_exc_Multiplikativ_Prüfenknopf)
                        .addGap(18, 18, 18)
                        .addComponent(MoCr_exc_Multiplikativ_RichtigFalschAusgabe, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        MoCr_exc_Multiplikativ_EingabeLayout.setVerticalGroup(
            MoCr_exc_Multiplikativ_EingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_Multiplikativ_EingabeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MoCr_exc_Multiplikativ_EingabeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(MoCr_exc_Multiplikativ_EingabeLayout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MoCr_exc_Multiplikativ_EingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MoCr_exc_Multiplikativ_Prüfenknopf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MoCr_exc_Multiplikativ_RichtigFalschAusgabe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        MoCr_exc_Multiplikativ_LösungButton.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        MoCr_exc_Multiplikativ_LösungButton.setText("Lösung anzeigen");
        MoCr_exc_Multiplikativ_LösungButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoCr_exc_Multiplikativ_LösungButtonActionPerformed(evt);
            }
        });

        MoCr_exc_Multiplikativ_Lösungsanzeige.setColumns(20);
        MoCr_exc_Multiplikativ_Lösungsanzeige.setFont(new java.awt.Font("Constantia", 0, 13)); // NOI18N
        MoCr_exc_Multiplikativ_Lösungsanzeige.setRows(5);
        MoCr_exc_Multiplikativ_Lösungsanzeige.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        MoCr_exc_Multiplikativ_Lösungsanzeige.setEnabled(false);
        jScrollPane7.setViewportView(MoCr_exc_Multiplikativ_Lösungsanzeige);

        javax.swing.GroupLayout MoCr_exc_MultiplikativLayout = new javax.swing.GroupLayout(MoCr_exc_Multiplikativ);
        MoCr_exc_Multiplikativ.setLayout(MoCr_exc_MultiplikativLayout);
        MoCr_exc_MultiplikativLayout.setHorizontalGroup(
            MoCr_exc_MultiplikativLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_exc_Multiplikativ_überschrift, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MoCr_exc_Multiplikativ_Aufgabe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MoCr_exc_Multiplikativ_Eingabe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MoCr_exc_MultiplikativLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(MoCr_exc_Multiplikativ_LösungButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7))
        );
        MoCr_exc_MultiplikativLayout.setVerticalGroup(
            MoCr_exc_MultiplikativLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_MultiplikativLayout.createSequentialGroup()
                .addComponent(MoCr_exc_Multiplikativ_überschrift, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_exc_Multiplikativ_Aufgabe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MoCr_exc_Multiplikativ_Eingabe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(MoCr_exc_MultiplikativLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MoCr_exc_Multiplikativ_LösungButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        MoCr_exc_Main.add(MoCr_exc_Multiplikativ, "card4");

        jLabel5.setText("Enigma");

        javax.swing.GroupLayout MoCr_exc_EnigmaLayout = new javax.swing.GroupLayout(MoCr_exc_Enigma);
        MoCr_exc_Enigma.setLayout(MoCr_exc_EnigmaLayout);
        MoCr_exc_EnigmaLayout.setHorizontalGroup(
            MoCr_exc_EnigmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_EnigmaLayout.createSequentialGroup()
                .addGap(236, 236, 236)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(278, Short.MAX_VALUE))
        );
        MoCr_exc_EnigmaLayout.setVerticalGroup(
            MoCr_exc_EnigmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_EnigmaLayout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(394, Short.MAX_VALUE))
        );

        MoCr_exc_Main.add(MoCr_exc_Enigma, "card5");

        jLabel6.setText("One-Time-Pad");

        javax.swing.GroupLayout MoCr_exc_OneTimePadLayout = new javax.swing.GroupLayout(MoCr_exc_OneTimePad);
        MoCr_exc_OneTimePad.setLayout(MoCr_exc_OneTimePadLayout);
        MoCr_exc_OneTimePadLayout.setHorizontalGroup(
            MoCr_exc_OneTimePadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_OneTimePadLayout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(298, Short.MAX_VALUE))
        );
        MoCr_exc_OneTimePadLayout.setVerticalGroup(
            MoCr_exc_OneTimePadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_OneTimePadLayout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(382, Short.MAX_VALUE))
        );

        MoCr_exc_Main.add(MoCr_exc_OneTimePad, "card6");

        jLabel7.setText("Transposition");

        javax.swing.GroupLayout MoCr_exc_TranspositionLayout = new javax.swing.GroupLayout(MoCr_exc_Transposition);
        MoCr_exc_Transposition.setLayout(MoCr_exc_TranspositionLayout);
        MoCr_exc_TranspositionLayout.setHorizontalGroup(
            MoCr_exc_TranspositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_TranspositionLayout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(249, Short.MAX_VALUE))
        );
        MoCr_exc_TranspositionLayout.setVerticalGroup(
            MoCr_exc_TranspositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_TranspositionLayout.createSequentialGroup()
                .addGap(208, 208, 208)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(362, Short.MAX_VALUE))
        );

        MoCr_exc_Main.add(MoCr_exc_Transposition, "card7");

        jLabel8.setText("Codierungen");

        javax.swing.GroupLayout MoCr_exc_CodierungenLayout = new javax.swing.GroupLayout(MoCr_exc_Codierungen);
        MoCr_exc_Codierungen.setLayout(MoCr_exc_CodierungenLayout);
        MoCr_exc_CodierungenLayout.setHorizontalGroup(
            MoCr_exc_CodierungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_CodierungenLayout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MoCr_exc_CodierungenLayout.setVerticalGroup(
            MoCr_exc_CodierungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_CodierungenLayout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(379, Short.MAX_VALUE))
        );

        MoCr_exc_Main.add(MoCr_exc_Codierungen, "card8");

        jLabel9.setText("Spielsprachen");

        javax.swing.GroupLayout MoCr_exc_SpielsprachenLayout = new javax.swing.GroupLayout(MoCr_exc_Spielsprachen);
        MoCr_exc_Spielsprachen.setLayout(MoCr_exc_SpielsprachenLayout);
        MoCr_exc_SpielsprachenLayout.setHorizontalGroup(
            MoCr_exc_SpielsprachenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_SpielsprachenLayout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(347, Short.MAX_VALUE))
        );
        MoCr_exc_SpielsprachenLayout.setVerticalGroup(
            MoCr_exc_SpielsprachenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_exc_SpielsprachenLayout.createSequentialGroup()
                .addContainerGap(434, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(166, 166, 166))
        );

        MoCr_exc_Main.add(MoCr_exc_Spielsprachen, "card9");

        jLabel10.setText("Hill");

        javax.swing.GroupLayout MoCr_exc_HillLayout = new javax.swing.GroupLayout(MoCr_exc_Hill);
        MoCr_exc_Hill.setLayout(MoCr_exc_HillLayout);
        MoCr_exc_HillLayout.setHorizontalGroup(
            MoCr_exc_HillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_HillLayout.createSequentialGroup()
                .addGap(281, 281, 281)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(293, Short.MAX_VALUE))
        );
        MoCr_exc_HillLayout.setVerticalGroup(
            MoCr_exc_HillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_exc_HillLayout.createSequentialGroup()
                .addContainerGap(428, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(169, 169, 169))
        );

        MoCr_exc_Main.add(MoCr_exc_Hill, "card10");

        jLabel11.setText("Steganographie");

        javax.swing.GroupLayout MoCr_exc_SteganographieLayout = new javax.swing.GroupLayout(MoCr_exc_Steganographie);
        MoCr_exc_Steganographie.setLayout(MoCr_exc_SteganographieLayout);
        MoCr_exc_SteganographieLayout.setHorizontalGroup(
            MoCr_exc_SteganographieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_SteganographieLayout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(316, Short.MAX_VALUE))
        );
        MoCr_exc_SteganographieLayout.setVerticalGroup(
            MoCr_exc_SteganographieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_SteganographieLayout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(381, Short.MAX_VALUE))
        );

        MoCr_exc_Main.add(MoCr_exc_Steganographie, "card11");

        jLabel12.setText("Affine");

        javax.swing.GroupLayout MoCr_exc_AffineLayout = new javax.swing.GroupLayout(MoCr_exc_Affine);
        MoCr_exc_Affine.setLayout(MoCr_exc_AffineLayout);
        MoCr_exc_AffineLayout.setHorizontalGroup(
            MoCr_exc_AffineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_AffineLayout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MoCr_exc_AffineLayout.setVerticalGroup(
            MoCr_exc_AffineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_exc_AffineLayout.createSequentialGroup()
                .addContainerGap(439, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(163, 163, 163))
        );

        MoCr_exc_Main.add(MoCr_exc_Affine, "card12");

        jLabel13.setText("Kryptoanalyse");

        javax.swing.GroupLayout MoCr_exc_KryptoanalyseLayout = new javax.swing.GroupLayout(MoCr_exc_Kryptoanalyse);
        MoCr_exc_Kryptoanalyse.setLayout(MoCr_exc_KryptoanalyseLayout);
        MoCr_exc_KryptoanalyseLayout.setHorizontalGroup(
            MoCr_exc_KryptoanalyseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_KryptoanalyseLayout.createSequentialGroup()
                .addGap(320, 320, 320)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
        );
        MoCr_exc_KryptoanalyseLayout.setVerticalGroup(
            MoCr_exc_KryptoanalyseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MoCr_exc_KryptoanalyseLayout.createSequentialGroup()
                .addContainerGap(417, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(160, 160, 160))
        );

        MoCr_exc_Main.add(MoCr_exc_Kryptoanalyse, "card13");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Panelnummer ist leider nicht vergeben!\nVersuchen Sie es bitte erneut mit einer Zahl zwischen 0 und 11!");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane3.setViewportView(jTextArea1);

        javax.swing.GroupLayout MoCr_exc_FehlerpanelLayout = new javax.swing.GroupLayout(MoCr_exc_Fehlerpanel);
        MoCr_exc_Fehlerpanel.setLayout(MoCr_exc_FehlerpanelLayout);
        MoCr_exc_FehlerpanelLayout.setHorizontalGroup(
            MoCr_exc_FehlerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_FehlerpanelLayout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );
        MoCr_exc_FehlerpanelLayout.setVerticalGroup(
            MoCr_exc_FehlerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MoCr_exc_FehlerpanelLayout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(316, Short.MAX_VALUE))
        );

        MoCr_exc_Main.add(MoCr_exc_Fehlerpanel, "card14");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_exc_Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MoCr_exc_Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MoCr_exc_Caesar_WeiterschaltknopfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_exc_Caesar_WeiterschaltknopfActionPerformed
        // TODO add your handling code here:
        NaechsteAufgabe();
        MoCr_exc_Caesar_Lösungsanzeige.setText("");
        MoCr_exc_Caesar_eingabefeld.setText("");
        MoCr_exc_Caesar_RichtigFalschAusgabe.setText("");
    }//GEN-LAST:event_MoCr_exc_Caesar_WeiterschaltknopfActionPerformed

    private void MoCr_exc_Caesar_anweisungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_exc_Caesar_anweisungActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MoCr_exc_Caesar_anweisungActionPerformed

    private void MoCr_exc_Caesar_LösungButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_exc_Caesar_LösungButtonActionPerformed
        // TODO add your handling code here:
        MoCr_exc_Caesar_Lösungsanzeige.setText(excLogic.LösungGenerieren());
    }//GEN-LAST:event_MoCr_exc_Caesar_LösungButtonActionPerformed

    private void MoCr_exc_Caesar_RichtigFalschAusgabeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_exc_Caesar_RichtigFalschAusgabeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MoCr_exc_Caesar_RichtigFalschAusgabeActionPerformed

    private void MoCr_exc_Caesar_PrüfenknopfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_exc_Caesar_PrüfenknopfActionPerformed
        // TODO add your handling code here:
        if(excLogic.EingabePrüfen(MoCr_exc_Caesar_eingabefeld.getText()))
        {
            MoCr_exc_Caesar_RichtigFalschAusgabe.setText("richtig");
            MoCr_exc_Caesar_Lösungsanzeige.setText(excLogic.LösungGenerieren());
        }
        else
        {
            MoCr_exc_Caesar_RichtigFalschAusgabe.setText("falsch");
        }
    }//GEN-LAST:event_MoCr_exc_Caesar_PrüfenknopfActionPerformed

    private void MoCr_exc_Multiplikativ_LösungButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_exc_Multiplikativ_LösungButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MoCr_exc_Multiplikativ_LösungButtonActionPerformed

    private void MoCr_exc_Multiplikativ_RichtigFalschAusgabeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_exc_Multiplikativ_RichtigFalschAusgabeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MoCr_exc_Multiplikativ_RichtigFalschAusgabeActionPerformed

    private void MoCr_exc_Multiplikativ_WeiterschaltknopfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoCr_exc_Multiplikativ_WeiterschaltknopfActionPerformed
        // TODO add your handling code here:
        int zustand = excLogic.aufgabenNummerGeben();
        MoCr_exc_Multiplikativ_Aufgabe_changeable.removeAll();
        switch(zustand)
        {
            case 1:
                MoCr_exc_Multiplikativ_Aufgabe_changeable.add(MoCr_exc_Multiplikativ_aufgabe2);
                excLogic.aufgabenNummerSetzen(2);
                break;
            default:
                MoCr_exc_Multiplikativ_Aufgabe_changeable.add(MoCr_exc_Multiplikativ_aufgabe1);
                excLogic.aufgabenNummerSetzen(1);
                break;
        }
        MoCr_exc_Multiplikativ_Aufgabe_changeable.repaint();
        MoCr_exc_Multiplikativ_Aufgabe_changeable.revalidate();
        MoCr_exc_Multiplikativ_eingabefeld.setText("");
        MoCr_exc_Multiplikativ_Lösungsanzeige.setText("");
        
    }//GEN-LAST:event_MoCr_exc_Multiplikativ_WeiterschaltknopfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MoCr_Frame_exc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MoCr_Frame_exc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MoCr_Frame_exc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MoCr_Frame_exc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MoCr_Frame_exc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MoCr_Caesar_AufgabeLabel;
    private javax.swing.JPanel MoCr_exc_Affine;
    private javax.swing.JPanel MoCr_exc_Caesar;
    private javax.swing.JPanel MoCr_exc_Caesar_Aufgabe;
    private javax.swing.JPanel MoCr_exc_Caesar_Eingabe;
    private javax.swing.JLabel MoCr_exc_Caesar_EingabeLabel;
    private javax.swing.JPanel MoCr_exc_Caesar_Loesung;
    private javax.swing.JButton MoCr_exc_Caesar_LösungButton;
    private javax.swing.JTextArea MoCr_exc_Caesar_Lösungsanzeige;
    private javax.swing.JButton MoCr_exc_Caesar_Prüfenknopf;
    private javax.swing.JTextField MoCr_exc_Caesar_RichtigFalschAusgabe;
    private javax.swing.JButton MoCr_exc_Caesar_Weiterschaltknopf;
    private javax.swing.JTextField MoCr_exc_Caesar_anweisung;
    private javax.swing.JTextArea MoCr_exc_Caesar_aufgabentext;
    private javax.swing.JTextArea MoCr_exc_Caesar_eingabefeld;
    private javax.swing.JPanel MoCr_exc_Caesar_überschrift;
    private javax.swing.JLabel MoCr_exc_Caesar_überschriftfenster;
    private javax.swing.JPanel MoCr_exc_Codierungen;
    private javax.swing.JPanel MoCr_exc_Enigma;
    private javax.swing.JPanel MoCr_exc_Fehlerpanel;
    private javax.swing.JPanel MoCr_exc_Hill;
    private javax.swing.JPanel MoCr_exc_Kryptoanalyse;
    private javax.swing.JPanel MoCr_exc_Main;
    private javax.swing.JPanel MoCr_exc_Multiplikativ;
    private javax.swing.JPanel MoCr_exc_Multiplikativ_Aufgabe;
    private javax.swing.JLabel MoCr_exc_Multiplikativ_AufgabeLabel;
    private javax.swing.JPanel MoCr_exc_Multiplikativ_Aufgabe_changeable;
    private javax.swing.JPanel MoCr_exc_Multiplikativ_Eingabe;
    private javax.swing.JLabel MoCr_exc_Multiplikativ_EingabeLabel;
    private javax.swing.JButton MoCr_exc_Multiplikativ_LösungButton;
    private javax.swing.JTextArea MoCr_exc_Multiplikativ_Lösungsanzeige;
    private javax.swing.JButton MoCr_exc_Multiplikativ_Prüfenknopf;
    private javax.swing.JTextField MoCr_exc_Multiplikativ_RichtigFalschAusgabe;
    private javax.swing.JButton MoCr_exc_Multiplikativ_Weiterschaltknopf;
    private javax.swing.JPanel MoCr_exc_Multiplikativ_aufgabe1;
    private javax.swing.JPanel MoCr_exc_Multiplikativ_aufgabe2;
    private javax.swing.JTextArea MoCr_exc_Multiplikativ_eingabefeld;
    private javax.swing.JPanel MoCr_exc_Multiplikativ_überschrift;
    private javax.swing.JLabel MoCr_exc_Multiplikativ_überschriftfenster;
    private javax.swing.JPanel MoCr_exc_OneTimePad;
    private javax.swing.JPanel MoCr_exc_Spielsprachen;
    private javax.swing.JPanel MoCr_exc_Steganographie;
    private javax.swing.JPanel MoCr_exc_Transposition;
    private javax.swing.JPanel MoCr_exc_Vigenere;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
